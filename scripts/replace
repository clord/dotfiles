#!/usr/bin/env ruby
require 'fileutils'

# Here's an oldie but sometimes a goodie
# Given a match pattern, a replace pattern, and a file (or STDIN) will
# write file to stdout, with each line modified by the match/replace patterns
if ARGV.length < 2
   STDERR.puts "pattern and output buffer are needed"
   exit 1
else
   pattern = Regexp.new(ARGV.shift.to_s)
   output_pattern = ARGV.shift.to_s
end

if ARGV.length == 0
   STDIN.each do |line|
      STDOUT.puts line.gsub(pattern, output_pattern)
   end
   exit 0
end


# For each file on the command line, open it, write it with mods to a new location, then move it back over the old
ARGV.each do |file|
   File.open(file, "r") do |i|
      begin
         File.open(file + ".new", "w") do |o|
            i.each { |line| o.puts line.gsub(pattern, output_pattern) }
         end
      rescue
         FileUtils.rm_f file + ".new"
      end
      FileUtils.mv(file + ".new", file)
   end
end

