#!/usr/bin/env zsh

autoload -U history-search-end
autoload -U edit-command-line

source ~/.zsh/keys.d/${(L)$(uname)}

zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end  history-search-end
zle -N edit-command-line
zle -N toggle-prompt
zle -N toggle-suspend

# Key bindings {{{1

[[ -n ${key[Home]}     ]] && bindkey ${key[Home]}     beginning-of-line
[[ -n ${key[End]}      ]] && bindkey ${key[End]}      end-of-line
[[ -n ${key[Insert]}   ]] && bindkey ${key[Insert]}   overwrite-mode
[[ -n ${key[Delete]}   ]] && bindkey ${key[Delete]}   delete-char
[[ -n ${key[Up]}       ]] && bindkey ${key[Up]}       up-line-or-history
[[ -n ${key[Down]}     ]] && bindkey ${key[Down]}     down-line-or-history
[[ -n ${key[Left]}     ]] && bindkey ${key[Left]}     backward-char
[[ -n ${key[Right]}    ]] && bindkey ${key[Right]}    forward-char
[[ -n ${key[PageUp]}   ]] && bindkey ${key[PageUp]}   history-beginning-search-backward-end
[[ -n ${key[PageDown]} ]] && bindkey ${key[PageDown]} history-beginning-search-forward-end

# Hack for PuTTY (acting as xterm) {{{1

bindkey '^[[1~' beginning-of-line
bindkey '^[[4~' end-of-line

# Taken from global zshrc, because I'm using noglobalrcs {{{1

if [[ $TERM != emacs ]]; then
    [[ -z $terminfo[kdch1] ]] || bindkey -M emacs $terminfo[kdch1] delete-char
    [[ -z $terminfo[khome] ]] || bindkey -M emacs $terminfo[khome] beginning-of-line
    [[ -z $terminfo[kend]  ]] || bindkey -M emacs $terminfo[kend]  end-of-line
    [[ -z $terminfo[kich1] ]] || bindkey -M emacs $terminfo[kich1] overwrite-mode
    [[ -z $terminfo[kdch1] ]] || bindkey -M vicmd $terminfo[kdch1] vi-delete-char
    [[ -z $terminfo[khome] ]] || bindkey -M vicmd $terminfo[khome] vi-beginning-of-line
    [[ -z $terminfo[kend]  ]] || bindkey -M vicmd $terminfo[kend]  vi-end-of-line
    [[ -z $terminfo[kich1] ]] || bindkey -M vicmd $terminfo[kich1] overwrite-mode
    [[ -z $terminfo[cuu1]  ]] || bindkey -M viins $terminfo[cuu1]  vi-up-line-or-history
    [[ -z $terminfo[cuf1]  ]] || bindkey -M viins $terminfo[cuf1]  vi-forward-char
    [[ -z $terminfo[kcuu1] ]] || bindkey -M viins $terminfo[kcuu1] vi-up-line-or-history
    [[ -z $terminfo[kcud1] ]] || bindkey -M viins $terminfo[kcud1] vi-down-line-or-history
    [[ -z $terminfo[kcuf1] ]] || bindkey -M viins $terminfo[kcuf1] vi-forward-char
    [[ -z $terminfo[kcub1] ]] || bindkey -M viins $terminfo[kcub1] vi-backward-char

    # ncurses fogyatekos
    [[ $terminfo[kcuu1] == O* ]] && bindkey -M viins ${terminfo[kcuu1]/O/[} vi-up-line-or-history
    [[ $terminfo[kcud1] == O* ]] && bindkey -M viins ${terminfo[kcud1]/O/[} vi-down-line-or-history
    [[ $terminfo[kcuf1] == O* ]] && bindkey -M viins ${terminfo[kcuf1]/O/[} vi-forward-char
    [[ $terminfo[kcub1] == O* ]] && bindkey -M viins ${terminfo[kcub1]/O/[} vi-backward-char
    [[ $terminfo[khome] == O* ]] && bindkey -M viins ${terminfo[khome]/O/[} beginning-of-line
    [[ $terminfo[kend]  == O* ]] && bindkey -M viins ${terminfo[kend]/O/[}  end-of-line
    [[ $terminfo[khome] == O* ]] && bindkey -M emacs ${terminfo[khome]/O/[} beginning-of-line
    [[ $terminfo[kend]  == O* ]] && bindkey -M emacs ${terminfo[kend]/O/[}  end-of-line
fi

# Misc keybindings {{{1

bindkey '^e' edit-command-line
bindkey '^j' push-line
bindkey '^z' toggle-suspend
bindkey '^x' toggle-prompt

#}}}
