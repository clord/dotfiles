# Set window titles {{{1

set_window_title() { print -Pn "\e]0;$*\a" }
set_window_title_default() { set_window_title "%l: %n@%m: %~" }


# cd {{{1


# Execute a command in a given directory
# Usage: cdrun DIR CMD [ARG...]
cdrun()
{
    cd $1; shift;
    $@; local e=$?;
    cd - &>/dev/null;
    return ${e:-0}
}

# Create directory, then cd into it
mcd() { mkdir -p $@; cd $1 }


# Change directory to the nearest repo root
cdr()
{
    local dir=${1:-$PWD}
    if [[ -d $dir/.svn ]]; then
        while [[ -d $dir/../.svn ]]; do
            d=${d%/*}
        done
    else
        while ! [[ -z $dir || -d $dir/.git || -d $dir/.hg || -d $dir/.bzr ]]; do
            dir=${dir%/*}
        done
    fi
    [[ -n $dir ]] && cd $dir
}

# Same as cdr, but don't look at the current directory
cdR() { cdr ${1:-$PWD}(:h) }

# do a blog post
blog() {
(
   DIR=~/src/c.lord.ac/posts
   AUTHOR="Christopher Lord"
   TITLE="${(j: :)@}"
   SLUG="${(j:-:)@}"
   DATE=`date +"%Y-%m-%d"`
   TIME=`date +"%Y-%m-%d %H:%M:%S:%Z"`
   FILE=_$DATE-$SLUG.markdown
   cd $DIR
   echo creating $FILE
   cat <<EOF >>$FILE && vim $FILE
---
title:        $TITLE
tags:         NOTAG
author:       $AUTHOR
published:    $TIME
---


EOF
)
}


# vim {{{1


# zsh widgets {{{1

toggle-prompt()
{
    if [[ -n $PS1 && -n $RPS1 ]]; then
        OPS1=$PS1; ORPS1=$RPS1
        unset PS1 RPS1
    else
        PS1=$OPS1; RPS1=$ORPS1
    fi
    zle reset-prompt
}

toggle-suspend()
{
    zle push-input
    BUFFER=fg
    zle accept-line
}


# Show frequencies of words in text
freq()
{
    cat $@ | tr A-Z a-z | tr -cs a-z '\n' | sort | uniq -c | sort -nr
}

pgrep()
{
    ps -ax -o "pid=,command=" | grep $@ | awk '{print $1}'
}

# Make stuff mine and set sane permissions
mine()
{
    chown -R ${UID}:${GID} $@
    chmod -R u=rwX,go=rX $@
}


# Show a ruler that spans the width of the terminal
ruler()
{
    local s
    for s in '....^....|' '1234567890'; do
        for (( i=1; $i<=$(( ($COLUMNS + ${#s}) / ${#s} )); i=$i+1 )); do
            echo -n $s
        done | cut -c -$COLUMNS
    done
}


# Download latest completion file from zsh dev
latest_completion()
{
    local name
    for name in $@; do
        curl -s http://zsh.cvs.sourceforge.net/viewvc/zsh/zsh/Completion/Unix/Command/_$name >~/.zsh/comp.d/_$name
    done
}


# case $# in 
d()
{
   case "$#" in
      0)
      dwc -lw10000 > decomp.wcode 
      ;;
      1)
         case $1 in
            -)
            dwc -lw10000
            ;;
            *)
            dwc -lw10000 > $1
            ;;
         esac
         ;;
      *)
         output=$1
         shift
         dwc "$@" -lw10000 > $output
         ;;
      esac


}  


# vim: set ft=zsh:
